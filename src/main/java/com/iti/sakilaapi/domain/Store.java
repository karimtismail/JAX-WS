// default package
// Generated Apr 6, 2023, 1:53:34 AM by Hibernate Tools 6.1.7.Final

package com.iti.sakilaapi.domain;

import jakarta.persistence.*;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static jakarta.persistence.GenerationType.IDENTITY;

/**
 * Store generated by hbm2java
 */
@Entity
@Table(name = "store"
        , catalog = "sakila"
        , uniqueConstraints = @UniqueConstraint(columnNames = "manager_staff_id")
)
public class Store implements java.io.Serializable {


    private Byte storeId;
    private Staff staff;
    private Address address;
    private Date lastUpdate;
    private Set staffs = new HashSet(0);
    private Set inventories = new HashSet(0);
    private Set customers = new HashSet(0);

    public Store() {
    }


    public Store(Staff staff, Address address, Date lastUpdate) {
        this.staff = staff;
        this.address = address;
        this.lastUpdate = lastUpdate;
    }

    public Store(Staff staff, Address address, Date lastUpdate, Set staffs, Set inventories, Set customers) {
        this.staff = staff;
        this.address = address;
        this.lastUpdate = lastUpdate;
        this.staffs = staffs;
        this.inventories = inventories;
        this.customers = customers;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "store_id", unique = true, nullable = false)
    public Byte getStoreId() {
        return this.storeId;
    }

    public void setStoreId(Byte storeId) {
        this.storeId = storeId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "manager_staff_id", unique = true, nullable = false)
    public Staff getStaff() {
        return this.staff;
    }

    public void setStaff(Staff staff) {
        this.staff = staff;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "address_id", nullable = false)
    public Address getAddress() {
        return this.address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update", nullable = false, length = 19)
    public Date getLastUpdate() {
        return this.lastUpdate;
    }

    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
    public Set getStaffs() {
        return this.staffs;
    }

    public void setStaffs(Set staffs) {
        this.staffs = staffs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
    public Set getInventories() {
        return this.inventories;
    }

    public void setInventories(Set inventories) {
        this.inventories = inventories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
    public Set getCustomers() {
        return this.customers;
    }

    public void setCustomers(Set customers) {
        this.customers = customers;
    }


}


