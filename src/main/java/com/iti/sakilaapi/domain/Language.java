// default package
// Generated Apr 6, 2023, 1:53:34 AM by Hibernate Tools 6.1.7.Final

package com.iti.sakilaapi.domain;

import jakarta.persistence.*;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static jakarta.persistence.GenerationType.IDENTITY;

/**
 * Language generated by hbm2java
 */
@Entity
@Table(name = "language"
        , catalog = "sakila"
)
public class Language implements java.io.Serializable {


    private Byte languageId;
    private String name;
    private Date lastUpdate;
    private Set filmsForLanguageId = new HashSet(0);
    private Set filmsForOriginalLanguageId = new HashSet(0);

    public Language() {
    }


    public Language(String name, Date lastUpdate) {
        this.name = name;
        this.lastUpdate = lastUpdate;
    }

    public Language(String name, Date lastUpdate, Set filmsForLanguageId, Set filmsForOriginalLanguageId) {
        this.name = name;
        this.lastUpdate = lastUpdate;
        this.filmsForLanguageId = filmsForLanguageId;
        this.filmsForOriginalLanguageId = filmsForOriginalLanguageId;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "language_id", unique = true, nullable = false)
    public Byte getLanguageId() {
        return this.languageId;
    }

    public void setLanguageId(Byte languageId) {
        this.languageId = languageId;
    }


    @Column(name = "name", nullable = false, length = 20)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update", nullable = false, length = 19)
    public Date getLastUpdate() {
        return this.lastUpdate;
    }

    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByLanguageId")
    public Set getFilmsForLanguageId() {
        return this.filmsForLanguageId;
    }

    public void setFilmsForLanguageId(Set filmsForLanguageId) {
        this.filmsForLanguageId = filmsForLanguageId;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "languageByOriginalLanguageId")
    public Set getFilmsForOriginalLanguageId() {
        return this.filmsForOriginalLanguageId;
    }

    public void setFilmsForOriginalLanguageId(Set filmsForOriginalLanguageId) {
        this.filmsForOriginalLanguageId = filmsForOriginalLanguageId;
    }


}


