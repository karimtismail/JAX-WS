// default package
// Generated Apr 6, 2023, 1:53:34 AM by Hibernate Tools 6.1.7.Final

package com.iti.sakilaapi.domain;

import jakarta.persistence.*;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static jakarta.persistence.GenerationType.IDENTITY;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "address"
        , catalog = "sakila"
)
public class Address implements java.io.Serializable {


    private Short addressId;
    private City city;
    private String address;
    private String address2;
    private String district;
    private String postalCode;
    private String phone;
    private byte[] location;
    private Date lastUpdate;
    private Set staffs = new HashSet(0);
    private Set customers = new HashSet(0);
    private Set stores = new HashSet(0);

    public Address() {
    }


    public Address(City city, String address, String district, String phone, byte[] location, Date lastUpdate) {
        this.city = city;
        this.address = address;
        this.district = district;
        this.phone = phone;
        this.location = location;
        this.lastUpdate = lastUpdate;
    }

    public Address(City city, String address, String address2, String district, String postalCode, String phone, byte[] location, Date lastUpdate, Set staffs, Set customers, Set stores) {
        this.city = city;
        this.address = address;
        this.address2 = address2;
        this.district = district;
        this.postalCode = postalCode;
        this.phone = phone;
        this.location = location;
        this.lastUpdate = lastUpdate;
        this.staffs = staffs;
        this.customers = customers;
        this.stores = stores;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "address_id", unique = true, nullable = false)
    public Short getAddressId() {
        return this.addressId;
    }

    public void setAddressId(Short addressId) {
        this.addressId = addressId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "city_id", nullable = false)
    public City getCity() {
        return this.city;
    }

    public void setCity(City city) {
        this.city = city;
    }


    @Column(name = "address", nullable = false, length = 50)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }


    @Column(name = "address2", length = 50)
    public String getAddress2() {
        return this.address2;
    }

    public void setAddress2(String address2) {
        this.address2 = address2;
    }


    @Column(name = "district", nullable = false, length = 20)
    public String getDistrict() {
        return this.district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }


    @Column(name = "postal_code", length = 10)
    public String getPostalCode() {
        return this.postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }


    @Column(name = "phone", nullable = false, length = 20)
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }


    @Column(name = "location", nullable = false)
    public byte[] getLocation() {
        return this.location;
    }

    public void setLocation(byte[] location) {
        this.location = location;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update", nullable = false, length = 19)
    public Date getLastUpdate() {
        return this.lastUpdate;
    }

    public void setLastUpdate(Date lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
    public Set getStaffs() {
        return this.staffs;
    }

    public void setStaffs(Set staffs) {
        this.staffs = staffs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
    public Set getCustomers() {
        return this.customers;
    }

    public void setCustomers(Set customers) {
        this.customers = customers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
    public Set getStores() {
        return this.stores;
    }

    public void setStores(Set stores) {
        this.stores = stores;
    }


}


